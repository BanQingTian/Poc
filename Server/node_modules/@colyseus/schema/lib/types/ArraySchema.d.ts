import { ChangeTree } from "../ChangeTree";
export declare class ArraySchema<T = any> extends Array<T> {
    protected $sorting: boolean;
    protected $changes: ChangeTree;
    static readonly [Symbol.species]: any;
    constructor(...items: T[]);
    clone: (isDecoding?: boolean) => ArraySchema<T>;
    sort(compareFn?: (a: T, b: T) => number): this;
    filter(callbackfn: (value: T, index: number, array: T[]) => unknown, thisArg?: any): ArraySchema<T>;
    splice(start: number, deleteCount?: number, ...insert: T[]): any;
    onAdd: (item: T, index: number) => void;
    onRemove: (item: T, index: number) => void;
    onChange: (item: T, index: number) => void;
    triggerAll: () => void;
}
